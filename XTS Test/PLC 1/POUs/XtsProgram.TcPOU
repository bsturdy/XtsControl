<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="XtsProgram" Id="{c940998f-79fe-4264-a06e-92076cf9e48c}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM XtsProgram
VAR
	
	XtsPU			: XtsProcessingUnitControl;
	XtsCA			: XtsCollisionAvoidanceControl;
	XtsAxes			: ARRAY [0..4] OF XtsAxisControl;
	MoveCaOptions	: ARRAY [0..4] OF ST_MoveAbsoluteCAOptions;
	
	i				: BYTE;
	ForStateBool	: BOOL;
	State			: BYTE;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
// -------------------- Cyclic Updates

XtsPU.CyclicUpdate(nXpu := 1);
XtsCA.CyclicUpdate();
FOR i := 0 TO 4 BY 1 DO
	XtsAxes[i].CyclicUpdate();
END_FOR



// -------------------- Error Checking

FOR i := 0 TO 4 BY 1 DO
	XtsAxes[i].AutoErrorCheckAndReset();
END_FOR



// -------------------- Definitions

FOR i := 0 TO 4 BY 1 DO
	MoveCaOptions[i].AdditionalTurns := 0;
	MoveCaOptions[i].PositionReferenceSystem := 0;
	MoveCaOptions[i].DynamicsReferenceSystem := 0;
	MoveCaOptions[i].GapControlMode := mcGapControlModeGroupDefault;
END_FOR







// -------------------- Program

CASE State OF
	
	// ---------------------------------------- Init
		
	0:	// Initialize XTS Processing Unit
		IF XtsPU.Initialize() THEN
			State := 1;
		END_IF
	
	1:	// Enable XTS mover axes
		ForStateBool := TRUE;
		FOR i := 0 TO 4 BY 1 DO
			IF NOT(XtsAxes[i].PowerOn()) THEN
				ForStateBool := FALSE;
				EXIT;
			END_IF
		END_FOR
		IF ForStateBool THEN
			State := 2;
		END_IF
		
	2:	// Link XTS mover axes to XTS CA group
		XtsCA.AddAxisToGroup(Axis := XtsAxes[0].AxisRef, AxisIdInGroup := 1);
		XtsCA.AddAxisToGroup(Axis := XtsAxes[1].AxisRef, AxisIdInGroup := 2);
		XtsCA.AddAxisToGroup(Axis := XtsAxes[2].AxisRef, AxisIdInGroup := 3);
		XtsCA.AddAxisToGroup(Axis := XtsAxes[3].AxisRef, AxisIdInGroup := 4);
		
		IF XtsCA.AddAxisToGroup(Axis := XtsAxes[4].AxisRef, AxisIdInGroup := 5) THEN
			STate := 3;
		END_IF
		
//		ForStateBool := TRUE;
//		FOR i := 0 TO 4 BY 1 DO
//			IF NOT(XtsCA.AddAxisToGroup(Axis := XtsAxes[i].AxisRef, AxisIdInGroup := (i + 1))) THEN
//				ForStateBool := FALSE;
//				EXIT;
//			END_IF
//		END_FOR
//		IF ForStateBool THEN
//			State := 3;
//		END_IF
	
	3: // Reset XTS CA group
		IF XtsCA.ResetGroup() THEN
			State := 4;
		END_IF
		
	4: // Enable XTS CA group
		IF XtsCA.EnableGroup() THEN
			State := 5;
		END_IF
		
		
	
	// ---------------------------------------- Move Test
		
	5:
	
	XtsAxes[1].MoveToPositionCA(position := 982, Velocity := 10, Options := MoveCaOptions[1]);
	
	
	
	99:	
		
		
		
END_CASE
]]></ST>
    </Implementation>
    <LineIds Name="XtsProgram">
      <LineId Id="6" Count="15" />
      <LineId Id="95" Count="1" />
      <LineId Id="104" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="109" Count="2" />
      <LineId Id="108" Count="0" />
      <LineId Id="87" Count="2" />
      <LineId Id="92" Count="2" />
      <LineId Id="23" Count="3" />
      <LineId Id="81" Count="1" />
      <LineId Id="27" Count="18" />
      <LineId Id="112" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="117" Count="1" />
      <LineId Id="120" Count="3" />
      <LineId Id="113" Count="0" />
      <LineId Id="46" Count="19" />
      <LineId Id="83" Count="3" />
      <LineId Id="66" Count="0" />
      <LineId Id="97" Count="1" />
      <LineId Id="102" Count="0" />
      <LineId Id="99" Count="2" />
      <LineId Id="67" Count="4" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>